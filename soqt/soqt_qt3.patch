--- aclocal.m4	2010-02-10 10:48:39.348851705 -0800
+++ aclocal.m4	2010-02-10 10:47:23.427601787 -0800
@@ -10737,10 +10737,10 @@
     # systems:
     if $sim_ac_qglobal_unresolved; then
       sim_ac_temp="$CPPFLAGS"
-      # /usr/include/qt: Debian-installations with Qt 3
+      # /usr/include/qt3: Debian-installations with Qt 3
       # /usr/include/qt4: Debian-installations with Qt 4
       # /sw/include/qt: Mac OS X Fink
-      for i in "/usr/include/qt" "/usr/include/qt4" "/sw/include/qt"; do
+      for i in "/usr/include/qt3" "/usr/include/qt4" "/sw/include/qt"; do
         if $sim_ac_qglobal_unresolved; then
           CPPFLAGS="-I$i $sim_ac_temp"
           SIM_AC_CHECK_HEADER_SILENT([qglobal.h],
diff -Naur configure.ac configure.ac
--- configure.ac	2006-10-30 14:09:48.000000000 -0800
+++ configure.ac	2008-11-13 19:56:03.697881260 -0800
@@ -568,9 +568,14 @@
   fi
 fi
 
-SIM_AC_QT_PROG(MOC, moc)
+# look for moc first
+SIM_AC_QT_PROG(MOC, moc)
 if test x"$MOC" = x"false"; then
-  SIM_AC_ERROR([no-moc])
+  SIM_AC_QT_PROG(MOC2, moc)
+  if test x"$MOC2" = x"false"; then
+    SIM_AC_ERROR([no-moc])
+  fi
+  MOC=MOC2
 fi
 
 # see commented-out restore above
diff -Naur src/Inventor/Qt/SoQtComponent.cpp src/Inventor/Qt/SoQtComponent.cpp
--- src/Inventor/Qt/SoQtComponent.cpp	2006-10-30 14:09:20.000000000 -0800
+++ src/Inventor/Qt/SoQtComponent.cpp	2008-11-13 19:56:20.237409512 -0800
@@ -100,7 +100,11 @@
   this->parent->removeEventFilter(this);
 }
 
-static void delete_dict_value(unsigned long key, void * value)
+#if ((COIN_MAJOR_VERSION<<16)|(COIN_MINOR_VERSION<<8)|COIN_MICRO_VERSION) > 0x020406
+static void delete_dict_value(SbDict::Key key, void * value)
+#else
+static void delete_dict_value(unsigned long key, void * value)
+#endif
 {
   delete (QCursor *)value;
 }

--- src/Inventor/Qt/SoQt.cpp
+++ src/Inventor/Qt/SoQt.cpp
@@ -622,7 +622,7 @@
 // spaceball devices.)
 class SoQtApplication : public QApplication {
 public:
-  SoQtApplication(int argc, char ** argv) : QApplication(argc, argv) { 
+  SoQtApplication(int & argc, char ** argv) : QApplication(argc, argv) { 
 #ifdef HAVE_X11_AVAILABLE
     this->display = NULL;
 #endif // HAVE_X11_AVAILABLE
@@ -719,7 +719,8 @@
     // use a static char array to store the dummy argv parameters
     static char * dummyargv[1];
     dummyargv[0] = "SoQt";
-    SoQtP::appobject = new SoQtApplication(1, (char **) dummyargv);
+    int argc = 1;
+    SoQtP::appobject = new SoQtApplication(argc, (char **) dummyargv);
     SoQtP::madeappobject = TRUE;
   }
   else {
--- src/Inventor/Qt/widgets/QtNativePopupMenu.cpp
+++ src/Inventor/Qt/widgets/QtNativePopupMenu.cpp
@@ -33,6 +33,9 @@
 // wrt Qt 4 properly. 20050629 mortene.
 #define QT3_SUPPORT
 
+// FIXME: create a new Qt4NativePopupMenu. There are just too
+// many differences between Qt3 menu handling and Qt4 menu handling.
+
 #include <qmetaobject.h>
 
 // *************************************************************************
@@ -121,6 +124,10 @@
     delete [] rec->title;
     delete rec;
   }
+
+  delete this->menus;
+  delete this->items;
+
 } // ~QtNativePopupMenu()
 
 // *************************************************************************
@@ -328,11 +335,14 @@
     rec->flags |= ITEM_MARKED;
   else
     rec->flags &= ~ITEM_MARKED;
+
   if (rec->parent != NULL) {
-#if QT_VERSION >= 0x040000 // Qt 4.*
+#if QT_VERSION >= 0x040000
     // FIXME: is this really safe? (20050727 frodo)
     QAction * action = (QAction *) rec->parent->findItem(itemid);
-    if (action) action->setChecked(marked ? true : false);
+    if (action) {
+      action->setChecked(marked ? true : false);
+    }
 #else
     rec->parent->setItemChecked(rec->itemid, marked ? true : false);
 #endif
@@ -350,6 +360,11 @@
   assert(rec && "no such menu");
   if (rec->parent == NULL)
     return (rec->flags & ITEM_MARKED) ? TRUE : FALSE;
+
+#if QT_VERSION >= 0x040400
+    QAction * action = (QAction *) rec->parent->findItem(itemid);
+    if (action) return action->isChecked();
+#endif
   return rec->parent->isItemChecked(rec->itemid) ? TRUE : FALSE;
 } // getMenuItemMarked()
 
@@ -373,10 +388,14 @@
   // itemActivation(). Multiple calls to itemActivation() causes a
   // segfault when selecting Quadbuffer stereo, at least when it's not
   // supported. (20050726 frodo)
-#if QT_VERSION >= 0x040000 // Qt 4.*
+
+  // this was changed/fixed again in Qt 4.4.0, so now we shouldn't
+  // disconnect menu items if this version is detected... 
+  // (20070530 pederb)
+#if (QT_VERSION >= 0x040000) && (QT_VERSION < 0x040400)
   QObject::disconnect(sub->menu, SIGNAL(activated(int)),
                       this, SLOT(itemActivation(int)));
-#endif
+#endif // QT-version >= 400 && QT-version < 4.4.0
 
   if (pos == -1)
     super->menu->insertItem(QString(sub->title), sub->menu, sub->menuid);
@@ -405,14 +424,14 @@
     menu->menu->insertItem(QString(item->title), item->itemid, pos);
   item->parent = menu->menu;
 
-#if QT_VERSION >= 0x040000 // Qt 4.*
+#if QT_VERSION >= 0x040000
   // FIXME: is this really safe? (20050726 frodo)
   QAction * action = (QAction *) item->parent->findItem(itemid);
   if (action) action->setCheckable(true);
 #endif // Qt 4.*
   
   if (item->flags & ITEM_MARKED) {
-#if QT_VERSION >= 0x040000 // Qt 4.*
+#if QT_VERSION >= 0x040000
     if (action) action->setChecked(true);
 #else
     item->parent->setItemChecked(item->itemid, true);
@@ -554,7 +573,7 @@
   rec->name = strcpy(new char [strlen(name)+1], name);
   rec->title = strcpy(new char [strlen(name)+1], name);
 
-#if QT_VERSION >= 0x040000 // Qt 4.*
+#if QT_VERSION >= 0x040000
   rec->menu = new QPOPUPMENU_CLASS(QString(name));
 #else
   rec->menu = new QPOPUPMENU_CLASS((QWidget *) NULL, name);
